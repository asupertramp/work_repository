import java.util.*;public class QueueTester{	public static void main(String[] args){		Scanner s=new Scanner(System.in);		Queue q=new Queue();		while(true){			System.out.println("输入e向队列中添加元素，输入d弹出元素，输入exit退出");			String cmd=s.next();			if(cmd.equals("e")){				q.enQueue(s.nextInt());			}			else if(cmd.equals("d")){				System.out.println(q.deQueue());			}			else if(cmd.equals("exit")) break;		}	}}class Queue{	public Queue(){		arr=new int[QUEUELENGTH];		head=0;		tail=0;	}	public boolean enQueue(int val){		if(isFull()){			System.out.println("队列已满");			return false;		}		else{			arr[tail]=val;			if(tail==arr.length-1)				tail=0;			else				tail++;		}				return true;	}	public int deQueue(){		if(isEmpty()){			System.out.println("队列已空");			return -1;		}		else{			int ret=arr[head];			if(head==arr.length-1)				head=0;			else head++;			return ret;		}			}	private boolean isEmpty(){		if(head==tail)			return true;		else return false;	}	private boolean isFull(){		if (head==tail+1)			return true;		else return false;	}	private int[] arr;	private final int QUEUELENGTH=4;	private int head;	private  int tail;}